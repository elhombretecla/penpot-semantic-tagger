{"version":3,"file":"serve.js","sources":["../../src/plugin/serve.ts"],"sourcesContent":["import type http from 'node:http';\n\nimport { type Plugin } from 'vite';\nimport { type WebSocket, WebSocketServer } from 'ws';\n\nimport middlewareClient from '../middleware/client.js';\nimport middlewareDelay from '../middleware/delay.js';\nimport middlewareError from '../middleware/error.js';\nimport middlewareInject from '../middleware/inject.js';\nimport middlewareLifecycle from '../middleware/lifecycle.js';\nimport middlewareLog from '../middleware/log.js';\nimport middlewarePing from '../middleware/ping.js';\nimport { createDebugger } from '../util/create-debugger.js';\n\ninterface Options {\n  /**\n   * Called when a new websocket connection is established.\n   */\n  readonly onConnect: (socket: WebSocket) => void;\n  /**\n   * Called when a request is received. Returns a function that is called when\n   * the response is finished.\n   */\n  readonly onRequest: () => () => void;\n  /**\n   * Return the current build error, if any.\n   */\n  readonly getError: () => Error | undefined;\n  /**\n   * Return a promise that resolves when no build is in progress.\n   */\n  readonly getBuildPromise: () => Promise<void>;\n}\n\nexport default ({ onConnect, onRequest, getError, getBuildPromise }: Options): Plugin => {\n  const debug = createDebugger('live-preview');\n\n  return {\n    name: `live-preview-serve`,\n    configurePreviewServer: {\n      // Important that this plugin's middleware be injected into the preview\n      // server first.\n      order: 'pre',\n      handler({ httpServer, middlewares, config }) {\n        const { base } = config;\n        const websocketServer = new WebSocketServer({\n          // XXX: Could be an HTTP/2 server. Technically, websockets\n          // (specifically, the upgrade request) is not supported over HTTP/2.\n          // But, the NodeJS HTTP/2 server allows HTTP/1 requests (TLS ALP\n          // negotiation), so websockets still work.\n          server: httpServer as http.Server,\n        });\n\n        websocketServer.on('connection', (socket) => {\n          debug?.(`connected.`);\n          socket.on('message', (data) => {\n            try {\n              const text = (Array.isArray(data) ? Buffer.concat(data) : data instanceof Buffer ? data : Buffer.from(data)).toString('utf8');\n              const message = JSON.parse(text);\n\n              if (message?.type === 'page-reload') {\n                debug?.('reloading...');\n              }\n            }\n            catch {\n              // ignore invalid messages\n            }\n          });\n          socket.on('close', () => {\n            debug?.(`disconnected.`);\n          });\n          onConnect(socket);\n        });\n\n        middlewares\n          .use(middlewareLog())\n          .use(middlewarePing())\n          .use(middlewareClient({ base }))\n          .use(middlewareDelay({ getPromise: getBuildPromise }))\n          .use(middlewareLifecycle({ onRequest }))\n          .use(middlewareError({ base, getError }))\n          .use(middlewareInject({ base }));\n      },\n    },\n  };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAkCA,oBAAe,CAAC,EAAE,SAAA,EAAW,SAAW,EAAA,QAAA,EAAU,iBAAuC,KAAA;AACvF,EAAM,MAAA,KAAA,GAAQ,eAAe,cAAc,CAAA,CAAA;AAE3C,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,CAAA,kBAAA,CAAA;AAAA,IACN,sBAAwB,EAAA;AAAA;AAAA;AAAA,MAGtB,KAAO,EAAA,KAAA;AAAA,MACP,OAAQ,CAAA,EAAE,UAAY,EAAA,WAAA,EAAa,QAAU,EAAA;AAC3C,QAAM,MAAA,EAAE,MAAS,GAAA,MAAA,CAAA;AACjB,QAAM,MAAA,eAAA,GAAkB,IAAI,eAAgB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAK1C,MAAQ,EAAA,UAAA;AAAA,SACT,CAAA,CAAA;AAED,QAAgB,eAAA,CAAA,EAAA,CAAG,YAAc,EAAA,CAAC,MAAW,KAAA;AAC3C,UAAA,KAAA,GAAQ,CAAY,UAAA,CAAA,CAAA,CAAA;AACpB,UAAO,MAAA,CAAA,EAAA,CAAG,SAAW,EAAA,CAAC,IAAS,KAAA;AAC7B,YAAI,IAAA;AACF,cAAA,MAAM,QAAQ,KAAM,CAAA,OAAA,CAAQ,IAAI,CAAA,GAAI,OAAO,MAAO,CAAA,IAAI,CAAI,GAAA,IAAA,YAAgB,SAAS,IAAO,GAAA,MAAA,CAAO,KAAK,IAAI,CAAA,EAAG,SAAS,MAAM,CAAA,CAAA;AAC5H,cAAM,MAAA,OAAA,GAAU,IAAK,CAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAE/B,cAAI,IAAA,OAAA,EAAS,SAAS,aAAe,EAAA;AACnC,gBAAA,KAAA,GAAQ,cAAc,CAAA,CAAA;AAAA,eACxB;AAAA,aAEI,CAAA,MAAA;AAAA,aAEN;AAAA,WACD,CAAA,CAAA;AACD,UAAO,MAAA,CAAA,EAAA,CAAG,SAAS,MAAM;AACvB,YAAA,KAAA,GAAQ,CAAe,aAAA,CAAA,CAAA,CAAA;AAAA,WACxB,CAAA,CAAA;AACD,UAAA,SAAA,CAAU,MAAM,CAAA,CAAA;AAAA,SACjB,CAAA,CAAA;AAED,QAAA,WAAA,CACG,IAAI,aAAc,EAAC,EACnB,GAAI,CAAA,cAAA,EAAgB,CACpB,CAAA,GAAA,CAAI,iBAAiB,EAAE,IAAA,EAAM,CAAC,CAAA,CAC9B,IAAI,eAAgB,CAAA,EAAE,YAAY,eAAgB,EAAC,CAAC,CACpD,CAAA,GAAA,CAAI,oBAAoB,EAAE,SAAA,EAAW,CAAC,CAAA,CACtC,IAAI,eAAgB,CAAA,EAAE,MAAM,QAAS,EAAC,CAAC,CACvC,CAAA,GAAA,CAAI,iBAAiB,EAAE,IAAA,EAAM,CAAC,CAAA,CAAA;AAAA,OACnC;AAAA,KACF;AAAA,GACF,CAAA;AACF,CAAA;;;;"}